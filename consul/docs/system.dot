digraph {
    node [shape = Mrecord, fontname = Helvetica, fontsize = 12];
    edge [fontname = Helvetica, fontsize = 12];
    style = "rounded";
    rankdir = "TB";
    label = "Consul-based Service Registry";
    fontname = Helvetica;

    client [label = "HTTP client"];
    client -> proxy;

    subgraph cluster_proxy {
       label = "HTTP Proxy";
       labelloc = "b";
       fontname = Helvetica;
       proxy [label = "proxy\nroutes = / , /healthz, /statusz, /services"];
       watcher [label = "watcher\n(cmd: consul-template)"];
       config_data [label = "volume:config_data"];
    }

    watcher -> registry_read;
    watcher -> config_data;
    proxy -> config_data;

    subgraph cluster_registry {
       label = "Consul Registry";
       labelloc = "b";
       fontname = Helvetica;
       registry_write [label = "registry (primary)\n /services/register"];
       registry_read [label = "registry (primary)\n /services"];
    }

    subgraph cluster_app1 {
       labelloc = "b";
       label = "Nodes/replicas (App1)";
       fontname = Helvetica;
       app1_1 [label = "app1_1:80\nroutes = / , /healthz"];
       app1_2 [label = "app1_2:80\nroutes = / , /healthz"];
    }
    app1_1 -> registry_write [label = "register()"];
    app1_2 -> registry_write [label = "register()"];
    registry_read -> app1_1 [label = "health()"];
    registry_read -> app1_2 [label = "health()"];
    proxy -> app1_1 [label = "query()"];

    subgraph cluster_app2 {
       labelloc = "b";
       label = "Nodes/replicas (App2)";
       fontname = Helvetica;
       app2_1 [label = "app2_1:80\nroutes = / , /healthz"];
       app2_2 [label = "app2_2:80\nroutes = / , /healthz"];
    }
    app2_1 -> registry_write [label = "register()"];
    app2_2 -> registry_write [label = "register()"];
    registry_read -> app2_1 [label = "health()"];
    registry_read -> app2_2 [label = "health()"];
    proxy -> app2_1 [label = "query()"];
}
