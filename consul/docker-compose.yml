version: '3'

services:

  # Consul primary and replicas setup

  registry:
    image: consul:latest
    hostname: registry
    ports:
    - 8400:8400
    - 8500:8500
    - 8600:8600
    command: |
      agent -ui -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 3 -log-level info

  registry1:
    image: consul:latest
    hostname: registry1
    expose:
    - 8400
    - 8500
    - 8600
    command: |
      agent -server -retry-join registry -log-level info -bind 0.0.0.0 -client 0.0.0.0
    depends_on:
    - registry

  registry2:
    image: consul:latest
    hostname: registry2
    expose:
    - 8400
    - 8500
    - 8600
    command: |
      agent -server -retry-join registry -log-level info -bind 0.0.0.0 -client 0.0.0.0
    depends_on:
    - registry

  #consul watch -type=service -service=redis -tag=bar /usr/bin/my-service-handler.sh

  # Router

  proxy:
    build: proxy
    command: /app/app.py
    restart: on-failure
    ports:
    - 8080:80
    healthcheck:
      test: curl -f http://localhost/healthz
      interval: 30s
      timeout: 180s
      retries: 3
    links:
    - registry
    depends_on:
    - registry
    - registry1
    - registry2
    environment:
      APP_NAME: app_proxy
      FLASK_ENV: development

  watcher:
    image: hashicorp/consul-template:0.23.0-alpine
    volumes:
    - ./proxy/proxy.ctmpl:/consul-template/config/proxy.ctmpl
    - /consul-template/data
    command: |
      consul-template -consul-addr=registry:8500 -template "/consul-template/config/proxy.ctmpl:/consul-template/data/proxy.yaml"
    restart: always
    links:
    - registry
    depends_on:
    - registry
    - registry1
    - registry2

  # -X POST http://alertmanager:9093/-/reload"

  # Apps

  app1:
    build: node
    command: /app/app.py
    restart: on-failure
    expose:
    - 80
    deploy:
      replicas: 1
    healthcheck:
      test: curl -f http://localhost/healthz
      interval: 30s
      timeout: 180s
      retries: 3
    links:
    - registry
    depends_on:
    - registry
    - registry1
    - registry2
    environment:
      APP_NAME: app1
      FLASK_ENV: development

  app2:
    build: node
    command: /app/app.py
    restart: on-failure
    expose:
    - 80
    deploy:
      replicas: 1
    healthcheck:
      test: curl -f http://localhost/healthz
      interval: 30s
      timeout: 180s
      retries: 3
    links:
    - registry
    depends_on:
    - registry
    - registry1
    - registry2
    environment:
      APP_NAME: app2
      FLASK_ENV: development
